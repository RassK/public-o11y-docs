.. _statushub-spoc:

StatusHub integration for Splunk On-Call
***************************************************

.. meta::
    :description: Configure the StatusHub integration for Splunk On-Call.

Statushub is a status page that connects with your monitoring tools to communicate infrastructure status to stakeholders.

The following guide walks you through the steps required to integrate StatusHub with Splunk On-Call.

Requirements
==================

This integration is compatible with the following versions of Splunk On-Call:

- Starter
- Growth
- Enterprise

StatusHub configuration
==========================

From the main screen, select the pencil icon to edit the status site.

.. image:: /_images/spoc/StatusHub-Bulletproof__hosted_status_pages_for_your_web_application_or_service.jpg
   :alt: Edit status site

Select :guilabel:`Services & Integrations`.

.. image:: /_images/spoc/StatusHub-Bulletproof__hosted_status_pages_for_your_web_application_or_service-4.jpg
   :alt: Select services and integrations

To link an existing service, select the pencil icon, or use the :guilabel:`New service` button to add a new service that links to Splunk On-Call.

.. image:: /_images/spoc/4.jpg
   :alt: New service

If you opted to create a new service, make sure to give it a name that you and your customers recognize. Select the
Splunk On-Call option, and assign in to the relevant group.

Alternatively, select the Splunk On-Call option, then select :guilabel:`Update Service`. StatusHub generates a webhook to use in Splunk On-Call.

.. image:: /_images/spoc/2-3.jpg
   :alt: Generate webhook

Once you have done this, your service appears under the group you previously selected. Copy the string after the equals sign to your clipboard for later use.

.. image:: /_images/spoc/4-1.jpg
   :alt: Copy string

Splunk On-Call configuration
===============================

In Splunk On-Call, select :guilabel:`Settings`, :guilabel:`Alert Behavior`, :guilabel:`Rules Engine`. Create a rule for each service you have on StatusHub.

.. image:: /_images/spoc/rulesengine2.png
   :alt: Create rules engine rules

After selecting :guilabel:`Add a Rule`, set your matching criteria for the alerts that you want to update in StatusHub. For example, if you want all Cloudwatch activity reflected on StatusHub, set the criteria to match ``Cloudwatch`` as the ``monitoring_tool``.

Set a new field (StatusHubfield in the example) to the key included in the Webhook URL generated by StatusHub.

.. image:: /_images/spoc/Alert_Rules-Ops_Learning-1.jpg
   :alt: Set new field

After creating a rule for each service you want to integrate with StatusHub, and after giving each unique rule the corresponding key from StatusHub, create an outgoing webhook.

To access this page, select :guilabel:`Settings`, :guilabel:`Alert Behavior`, :guilabel:`Integrations`, :guilabel:`Outgoing Webhooks`.

.. image:: /_images/spoc/outgoingwebhooks.png
   :alt: Select the outgoing webhooks integration

Select :guilabel:`Add Webhook` to create your webhook.

.. image:: /_images/spoc/Outgoing_Webhooks-Ops_Learning.jpg
   :alt: Create webhook

Make sure you have selected the :menuselection:`Any-Incident` option from the event menu. Select :menuselection:`POST` as the method.

Paste one of the full Webhook URLs for each of your services from StatusHub into the :guilabel:`To field`. Then, delete the string after the equals sign and replace it with ``${{ALERT.StatusHubfield}}``. This pulls in the Webhook key for your specific service, completing the URL so that StatusHub can be updated.

Additionally, leave the payload blank. StatusHub automatically pulls the Incident's entity_display_name to be the title of the Incident on StatusHub, and the state_message to be the incident's details.

.. image:: /_images/spoc/2-1.jpg
   :alt: Payload edit

Check that the webhook is saved.

.. image:: /_images/spoc/5.jpg
   :alt: Saved webhook

To test the webhook, create an incident with the appropriate criteria to trigger one of the Rules Engine rules you created. If everything works, your StatusHub page updates.

